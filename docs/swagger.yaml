definitions:
  models.InventoryInput:
    properties:
      product_name:
        type: string
      qty_reserved:
        type: integer
      qty_saleable:
        type: integer
      qty_total:
        type: integer
    required:
    - product_name
    type: object
  models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.OrderInput:
    properties:
      no_telphone:
        type: string
      shipping_address:
        type: string
      sku:
        type: string
      status:
        type: string
    required:
    - no_telphone
    - shipping_address
    - sku
    - status
    type: object
  models.RegisterInput:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    - firstname
    - password
    type: object
  utils.Meta:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      meta:
        $ref: '#/definitions/utils.Meta'
    type: object
info:
  contact: {}
paths:
  /api/v1/inventory:
    get:
      description: Return data inventory by seller.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get all inventory by seller.
      tags:
      - inventory
    post:
      description: Save Inventory data in Db.
      parameters:
      - description: Create inventory
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.InventoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create a new Inventory
      tags:
      - inventory
  /api/v1/inventory/{id}:
    get:
      description: Return data inventory where similar with id.
      parameters:
      - description: find inventory by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get Single inventory by id.
      tags:
      - inventory
    put:
      description: Update data inventory in Db.
      parameters:
      - description: Update inventory
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.InventoryInput'
      - description: find inventory by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update Inventory
      tags:
      - inventory
  /api/v1/inventory/delete/{id}:
    delete:
      description: Return data boolean.
      parameters:
      - description: delete inventory by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete inventory by id.
      tags:
      - inventory
  /api/v1/inventory/sku/{sku}:
    get:
      description: Return data inventory where similar with sku.
      parameters:
      - description: fing inventory by sku
        in: path
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get Single inventory by sku.
      tags:
      - inventory
  /api/v1/order:
    get:
      description: Return data order by seller.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get all order by seller.
      tags:
      - order
    post:
      description: Create new order by customer.
      parameters:
      - description: Create order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.OrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create a new Order
      tags:
      - order
  /api/v1/order/{id}:
    get:
      description: Return data order where similar with id.
      parameters:
      - description: find order by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get Single order by id.
      tags:
      - order
    put:
      description: Update status order.
      parameters:
      - description: Update status order
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.OrderInput'
      - description: find order by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update Order
      tags:
      - order
  /api/v1/order/delete/{id}:
    delete:
      description: Return data boolean.
      parameters:
      - description: delete order by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete order by id.
      tags:
      - order
  /api/v1/user/login:
    post:
      description: Authenticate User.
      parameters:
      - description: Login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login a user
      tags:
      - user
  /api/v1/user/register:
    post:
      description: Save user data in Db.
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register a user
      tags:
      - user
swagger: "2.0"
